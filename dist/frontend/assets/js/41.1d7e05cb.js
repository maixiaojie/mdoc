(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{179:function(e,t,n){"use strict";n.r(t);var o=n(0),i=Object(o.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("p",[e._v("你好，我是winter。")]),e._v(" "),n("p",[e._v("前面的课程中，我们已经讲解了大部分的HTML标签。")]),e._v(" "),n("p",[e._v("然而，为了突出重点，我们还是会忽略一些标签类型。比如表单类标签和表格类标签，我认为只有少数前端工程师用过，比如我在整个手机淘宝的工作生涯中，一次表格类标签都没有用到，表单类则只用过input，也只有几次。")]),e._v(" "),n("p",[e._v("那么，剩下的标签我们怎么样去了解它们呢？当然是查阅HTML标准。")]),e._v(" "),n("p",[e._v("由于阅读标准有一定门槛，需要了解一些机制，这节课，我为你设计了一个小实验，用JavaScript代码去抽取标准中我们需要的信息。")]),e._v(" "),e._m(0),e._v(" "),n("p",[e._v("我们采用WHATWG的living standard标准，我们先来看看标准是如何描述一个标签的，这里我们看到，有下面这些内容。")]),e._v(" "),e._m(1),e._v(" "),n("p",[e._v("我们看到，这里的描述分为6个部分，有下面这些内容。")]),e._v(" "),e._m(2),e._v(" "),n("p",[e._v("这一节课，我们关注一下Categories、Contexts in which this element can be used、Content model这几个部分。我会带你从标准中抓取数据，做一个小工具，用来检查X标签是否能放入Y标签内。")]),e._v(" "),e._m(3),e._v(" "),n("p",[e._v("HTML标准描述用词非常的严谨，这给我们抓取数据带来了巨大的方便，首先，我们打开单页面版HTML标准 "),n("a",{attrs:{href:"https://html.spec.whatwg.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://html.spec.whatwg.org/"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("在这个页面上，我们执行一下以下代码：")]),e._v(" "),e._m(4),e._v(" "),n("p",[e._v("这样我们就得到了所有元素的定义了，现在有107个元素。")]),e._v(" "),n("p",[e._v("不过，比较尴尬的是，这些文本中并不包含元素名，我们只好从id属性中获取，最后代码类似这样：")]),e._v(" "),e._m(5),e._v(" "),n("p",[e._v("接下来我们用代码理解一下这些文本。首先我们来分析一下这些文本，它分成了6个部分，而且顺序非常固定，这样，我们可以用JavaScript的正则表达式匹配来拆分六个字段。")]),e._v(" "),n("p",[e._v("我们这个小实验的目标是计算元素之间的包含关系，因此，我们先关心一下categories和contentModel两个字段。")]),e._v(" "),e._m(6),e._v(" "),n("p",[e._v("接下来我们来处理category。")]),e._v(" "),n("p",[e._v("首先category的写法中，最基本的就是直接描述了category的句子，我们把这些不带任何条件的category先保存起来，然后打印出来其它的描述看看：")]),e._v(" "),e._m(7),e._v(" "),n("p",[e._v("这里我们要处理的第一个逻辑是带if的情况。")]),e._v(" "),n("p",[e._v("然后我们来看看剩下的情况：")]),e._v(" "),e._m(8),e._v(" "),n("p",[e._v("这里出现了几个概念：")]),e._v(" "),e._m(9),e._v(" "),n("p",[e._v("如果我们要真正完美地实现元素分类，就必须要在代码中加入正则表达式来解析这些规则，这里作为今天的课后问题，留给你自己完成。")]),e._v(" "),n("p",[e._v("接下来我们看看Content Model，我们照例先处理掉最简单点的部分，就是带分类的内容模型：")]),e._v(" "),e._m(10),e._v(" "),n("p",[e._v("好了，我们照例看看剩下了什么：")]),e._v(" "),e._m(11),e._v(" "),n("p",[e._v("这有点复杂，我们还是把它做一些分类，首先我们过滤掉带If的情况、Text和Transparent。")]),e._v(" "),e._m(12),e._v(" "),n("p",[e._v("这时候我们再来执行看看：")]),e._v(" "),e._m(13),e._v(" "),n("p",[e._v("这下剩余的就少多了，我们可以看到，基本上剩下的都是直接描述可用的元素了，如果你愿意，还可以用代码进一步解析，不过如果是我的话，会选择手工把它们写成JSON了，毕竟只有三十多行文本。")]),e._v(" "),n("p",[e._v("好了，有了contentModel和category，我们要检查某一元素是否可以作为另一元素的子元素，就可以判断一下两边是否匹配啦，首先，我们要做个索引：")]),e._v(" "),e._m(14),e._v(" "),n("p",[e._v("然后我们编写一下我们的check函数：")]),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),n("p",[e._v("这一节课，我们完成了一个小实验：利用工具分析Web标准文本，来获得元素的信息。")]),e._v(" "),n("p",[e._v("通过这个实验，我希望能够传递一种思路，代码能够帮助我们从Web标准中挖掘出来很多想要的信息，编写代码的过程，也是更深入理解标准的契机。")]),e._v(" "),n("p",[e._v("我们前面的课程中把元素分成了几类来讲解，但是这些分类只能大概地覆盖所有的标签，我设置课程的目标也是讲解标签背后的知识，而非每一种标签的细节。具体每一种标签的属性和细节，可以留给大家自己去整理。")]),e._v(" "),n("p",[e._v("这一节课的产出，则是“绝对完整的标签列表”，也是我学习和阅读标准的小技巧，通过代码我们可以从不同的侧面分析标准的内容，挖掘需要注意的点，这是一种非常好的学习方法。")]),e._v(" "),e._m(17)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"html标准"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html标准","aria-hidden":"true"}},[this._v("#")]),this._v(" HTML标准")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("Categories:\n    Flow content.\n    Phrasing content.\n    Embedded content.\n    If the element has a controls attribute: Interactive content.\n    Palpable content.\nContexts in which this element can be used:\n    Where embedded content is expected.\nContent model:\n    If the element has a src attribute: zero or more track elements, then transparent, but with no media element descendants.\n    If the element does not have a src attribute: zero or more source elements, then zero or more track elements, then transparent, but with no media element descendants.\nTag omission in text/html:\n    Neither tag is omissible.\nContent attributes:\n    Global attributes\n    src — Address of the resource\n    crossorigin — How the element handles crossorigin requests\n    poster — Poster frame to show prior to video playback\n    preload — Hints how much buffering the media resource will likely need\n    autoplay — Hint that the media resource can be started automatically when the page is loaded\n    playsinline — Encourage the user agent to display video content within the element's playback area\n    loop — Whether to loop the media resource\n    muted — Whether to mute the media resource by default\n    controls — Show user agent controls\n    width — Horizontal dimension\n    height — Vertical dimension\nDOM interface:\n    [Exposed=Window, HTMLConstructor]\n    interface HTMLVideoElement : HTMLMediaElement {\n      [CEReactions] attribute unsigned long width;\n      [CEReactions] attribute unsigned long height;\n      readonly attribute unsigned long videoWidth;\n      readonly attribute unsigned long videoHeight;\n      [CEReactions] attribute USVString poster;\n      [CEReactions] attribute boolean playsInline;\n    };\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("Categories：标签所属的分类。")]),e._v(" "),n("li",[e._v("Contexts in which this element can be used：标签能够用在哪里。")]),e._v(" "),n("li",[e._v("Content model：标签的内容模型。")]),e._v(" "),n("li",[e._v("Tag omission in text/html：标签是否可以省略。")]),e._v(" "),n("li",[e._v("Content attributes：内容属性。")]),e._v(" "),n("li",[e._v("DOM interface：用WebIDL定义的元素类型接口。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"代码角度分析html标准"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码角度分析html标准","aria-hidden":"true"}},[this._v("#")]),this._v(" 代码角度分析HTML标准")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('Array.prototype.map.call(document.querySelectorAll(".element"), e=>e.innerText);\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('var elementDefinations = Array.prototype.map.call(document.querySelectorAll(".element"), e => ({\n  text:e.innerText,\n  name:e.childNodes[0].childNodes[0].id.match(/the\\-([\\s\\S]+)\\-element:/)?RegExp.$1:null}));\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('for(let defination of elementDefinations) {\n\n  console.log(defination.name + ":")\n  let categories = defination.text.match(/Categories:\\n([\\s\\S]+)\\nContexts in which this element can be used:/)[1].split("\\n");\n  for(let category of categories) {\n      console.log(category);\n  }\n    \n\n/*\n  let contentModel = defination.text.match(/Content model:\\n([\\s\\S]+)\\nTag omission in text\\/html:/)[1].split("\\n");\n  for(let line of contentModel)\n    console.log(line);\n*/\n}\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('for(let defination of elementDefinations) {\n\n  //console.log(defination.name + ":")\n  let categories = defination.text.match(/Categories:\\n([\\s\\S]+)\\nContexts in which this element can be used:/)[1].split("\\n");\n  defination.categories = [];\n  for(let category of categories) {\n    if(category.match(/^([^ ]+) content./))\n      defination.categories.push(RegExp.$1);\n    else\n      console.log(category)  \n  }\n    \n\n/*\n  let contentModel = defination.text.match(/Content model:\\n([\\s\\S]+)\\nTag omission in text\\/html:/)[1].split("\\n");\n  for(let line of contentModel)\n    console.log(line);\n*/\n}\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v(" None.\n Sectioning root.\n None.\n Sectioning root.\n None.\n Form-associated element.\n Listed and submittable form-associated element.\n None.\n Sectioning root.\n None.\n If the type attribute is not in the Hidden state: Listed, labelable, submittable, resettable, and autocapitalize-inheriting form-associated element.\n If the type attribute is in the Hidden state: Listed, submittable, resettable, and autocapitalize-inheriting form-associated element.\n Listed, labelable, submittable, and autocapitalize-inheriting form-associated element.\n Listed, labelable, submittable, resettable, and autocapitalize-inheriting form-associated element.\n None.\n Listed, labelable, submittable, resettable, and autocapitalize-inheriting form-associated element.\n Listed, labelable, resettable, and autocapitalize-inheriting form-associated element.\n Labelable element.\n Sectioning root.\n Listed and autocapitalize-inheriting form-associated element.\n None.\n Sectioning root.\n None.\n Sectioning root.\n Script-supporting element.\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("None")]),e._v(" "),n("li",[e._v("Sectioning root")]),e._v(" "),n("li",[e._v("Form-associated element")]),e._v(" "),n("li",[e._v("Labelable element")]),e._v(" "),n("li",[e._v("Script-supporting element")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('for(let defination of elementDefinations) {\n\n  //console.log(defination.name + ":")\n  let categories = defination.text.match(/Categories:\\n([\\s\\S]+)\\nContexts in which this element can be used:/)[1].split("\\n");\n  defination.contentModel = [];\n  let contentModel = defination.text.match(/Content model:\\n([\\s\\S]+)\\nTag omission in text\\/html:/)[1].split("\\n");\n  for(let line of contentModel)\n    if(line.match(/^([^ ]+) content./))\n      defination.contentModel.push(RegExp.$1);\n    else\n      console.log(line)\n}\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v(" A head element followed by a body element.\n If the document is an iframe srcdoc document or if title information is available from a higher-level protocol: Zero or more elements of metadata content, of which no more than one is a title element and no more than one is a base element.\n Otherwise: One or more elements of metadata content, of which exactly one is a title element and no more than one is a base element.\n Text that is not inter-element whitespace.\n Nothing.\n Text that gives a conformant style sheet.\n One or more h1, h2, h3, h4, h5, h6 elements, optionally intermixed with script-supporting elements.\n Nothing.\n Zero or more li and script-supporting elements.\n Either: Zero or more groups each consisting of one or more dt elements followed by one or more dd elements, optionally intermixed with script-supporting elements.\n Or: One or more div elements, optionally intermixed with script-supporting elements.\n Either: one figcaption element followed by flow content.\n Or: flow content followed by one figcaption element.\n Or: flow content.\n If the element is a child of a dl element: one or more dt elements followed by one or more dd elements, optionally intermixed with script-supporting elements.\n If the element is not a child of a dl element: flow content.\n Transparent, but there must be no interactive content or a element descendants.\n See prose.\n Text.\n If the element has a datetime attribute: Phrasing content.\n Otherwise: Text, but must match requirements described in prose below.\n Nothing.\n Transparent.\n Zero or more source elements, followed by one img element, optionally intermixed with script-supporting elements.\n Nothing.\n Zero or more param elements, then, transparent.\n Nothing.\n If the element has a src attribute: zero or more track elements, then transparent, but with no media element descendants.\n If the element does not have a src attribute: zero or more source elements, then zero or more track elements, then transparent, but with no media element descendants.\n If the element has a src attribute: zero or more track elements, then transparent, but with no media element descendants.\n If the element does not have a src attribute: zero or more source elements, then zero or more track elements, then transparent, but with no media element descendants.\n Nothing.\n Transparent.\n Nothing.\n In this order: optionally a caption element, followed by zero or more colgroup elements, followed optionally by a thead element, followed by either zero or more tbody elements or one or more tr elements, followed optionally by a tfoot element, optionally intermixed with one or more script-supporting elements.\n If the span attribute is present: Nothing.\n If the span attribute is absent: Zero or more col and template elements.\n Nothing.\n Zero or more tr and script-supporting elements.\n Zero or more td, th, and script-supporting elements.\n Nothing.\n Zero or more option, optgroup, and script-supporting elements.\n Either: phrasing content.\n Or: Zero or more option and script-supporting elements.\n Zero or more option and script-supporting elements.\n If the element has a label attribute and a value attribute: Nothing.\n If the element has a label attribute but no value attribute: Text.\n If the element has no label attribute and is not a child of a datalist element: Text that is not inter-element whitespace.\n If the element has no label attribute and is a child of a datalist element: Text.\n Text.\n Optionally a legend element, followed by flow content.\n One summary element followed by flow content.\n Either: phrasing content.\n Or: one element of heading content.\n If there is no src attribute, depends on the value of the type attribute, but must match script content restrictions.\n If there is a src attribute, the element must be either empty or contain only script documentation that also matches script content restrictions.\n When scripting is disabled, in a head element: in any order, zero or more link elements, zero or more style elements, and zero or more meta elements.\n When scripting is disabled, not in a head element: transparent, but there must be no noscript element descendants.\n Otherwise: text that conforms to the requirements given in the prose.\n Nothing (for clarification, see example).\n Transparent\n Transparent, but with no interactive content descendants except for a elements, img elements with usemap attributes, button elements, input elements whose type attribute are in the Checkbox or Radio Button states, input elements that are buttons, select elements with a multiple attribute or a display size greater than 1, and elements that would not be interactive content except for having the tabindex attribute specified.\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('for(let defination of elementDefinations) {\n  //console.log(defination.name + ":")\n  let categories = defination.text.match(/Categories:\\n([\\s\\S]+)\\nContexts in which this element can be used:/)[1].split("\\n");\n  defination.contentModel = [];\n  let contentModel = defination.text.match(/Content model:\\n([\\s\\S]+)\\nTag omission in text\\/html:/)[1].split("\\n");\n  for(let line of contentModel)\n    if(line.match(/([^ ]+) content./))\n      defination.contentModel.push(RegExp.$1);\n    else if(line.match(/Nothing.|Transparent./));\n    else if(line.match(/^Text[\\s\\S]*.$/));\n    else\n      console.log(line)\n}\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("A head element followed by a body element.\nOne or more h1, h2, h3, h4, h5, h6 elements, optionally intermixed with script-supporting elements.\nZero or more li and script-supporting elements.\nEither: Zero or more groups each consisting of one or more dt elements followed by one or more dd elements, optionally intermixed with script-supporting elements.\nOr: One or more div elements, optionally intermixed with script-supporting elements.\nIf the element is a child of a dl element: one or more dt elements followed by one or more dd elements, optionally intermixed with script-supporting elements.\nSee prose.\nOtherwise: Text, but must match requirements described in prose below.\nZero or more source elements, followed by one img element, optionally intermixed with script-supporting elements.\nZero or more param elements, then, transparent.\nIf the element has a src attribute: zero or more track elements, then transparent, but with no media element descendants.\nIf the element does not have a src attribute: zero or more source elements, then zero or more track elements, then transparent, but with no media element descendants.\nIf the element has a src attribute: zero or more track elements, then transparent, but with no media element descendants.\nIf the element does not have a src attribute: zero or more source elements, then zero or more track elements, then transparent, but with no media element descendants.\nIn this order: optionally a caption element, followed by zero or more colgroup elements, followed optionally by a thead element, followed by either zero or more tbody elements or one or more tr elements, followed optionally by a tfoot element, optionally intermixed with one or more script-supporting elements.\nIf the span attribute is absent: Zero or more col and template elements.\nZero or more tr and script-supporting elements.\nZero or more td, th, and script-supporting elements.\nZero or more option, optgroup, and script-supporting elements.\nOr: Zero or more option and script-supporting elements.\nZero or more option and script-supporting elements.\nIf the element has a label attribute but no value attribute: Text.\nIf the element has no label attribute and is not a child of a datalist element: Text that is not inter-element whitespace.\nIf the element has no label attribute and is a child of a datalist element: Text.\nWhen scripting is disabled, in a head element: in any order, zero or more link elements, zero or more style elements, and zero or more meta elements.\nWhen scripting is disabled, not in a head element: transparent, but there must be no noscript element descendants.\nOtherwise: text that conforms to the requirements given in the prose.\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("var dictionary = Object.create(null);\n\nfor(let defination of elementDefinations) {\n  dictionary[defination.name] = defination;\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("function check(parent, child) {\n  for(let category of child.categories)\n    if(parent.contentModel.categories.conatains(category))\n      return true;\n  if(parent.contentModel.names.conatains(child.name))\n      return true;\n  return false;\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://static001.geekbang.org/resource/image/7c/b1/7ca7c24e92d25bde2e8609ed5386b5b1.jpg",alt:""}})])}],!1,null,null,null);t.default=i.exports}}]);