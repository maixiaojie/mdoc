(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{206:function(e,r,t){"use strict";t.r(r);var a=t(0),n=Object(a.a)({},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("p",[e._v("前两篇文章分享的是系统底层方面的内容，今天我们进入高手成长篇的第二部分——Java底层知识。")]),e._v(" "),e._m(0),e._v(" "),t("p",[e._v("首先，Java最黑科技的玩法就是字节码编程，也就是动态修改或是动态生成Java字节码。Java的字节码相当于汇编，其中的一些细节你可以从下面的这几个教程中学习。")]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://dzone.com/articles/introduction-to-java-bytecode",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java Zone: Introduction to Java Bytecode"),t("OutboundLink")],1),e._v(" ，这篇文章图文并茂地向你讲述了Java字节码的一些细节，是一篇很不错的入门文章。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.ibm.com/developerworks/library/it-haggar_bytecode/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM DeveloperWorks: Java bytecode"),t("OutboundLink")],1),e._v(" ，虽然这篇文章很老了，但是这篇文章是一篇非常好的讲Java 字节码的文章。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/jon-bell/bytecode-examples",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java Bytecode and JVMTI Examples"),t("OutboundLink")],1),e._v("，这是一些使用 "),t("a",{attrs:{href:"http://docs.oracle.com/javase/7/docs/platform/jvmti/jvmti.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JVM Tool Interface"),t("OutboundLink")],1),e._v(" 操作字节码的比较实用的例子。包括方法调用统计、静态字节码修改、Heap Taggin和Heap Walking。")])])]),e._v(" "),t("p",[e._v("当然，一般来说，我们不使用JVMTI操作字节码，而是用一些更好用的库。这里有三个库可以帮你比较容易地做这个事。")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://wiki.openjdk.java.net/display/CodeTools/asmtools",target:"_blank",rel:"noopener noreferrer"}},[e._v("asmtools"),t("OutboundLink")],1),e._v(" - 用于生产环境的Java .class文件开发工具。")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://bytebuddy.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Byte Buddy"),t("OutboundLink")],1),e._v(" - 代码生成库：运行时创建Class文件而不需要编译器帮助。")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/qmx/jitescript",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jitescript"),t("OutboundLink")],1),e._v(" - 和 "),t("a",{attrs:{href:"https://github.com/headius/bitescript",target:"_blank",rel:"noopener noreferrer"}},[e._v("BiteScript"),t("OutboundLink")],1),e._v(" 类似的字节码生成库。")])]),e._v(" "),t("p",[e._v("就我而言，我更喜欢Byte Buddy，它在2015年还获了Oracle的 “"),t("a",{attrs:{href:"https://www.oracle.com/corporate/pressrelease/dukes-award-102815.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Duke’s Choice"),t("OutboundLink")],1),e._v("” 大奖，其中说Byte Buddy极大地发展了Java的技术。")]),e._v(" "),t("p",[e._v("使用字节码编程可以玩出很多高级玩法，最高级的还是在Java程序运行时进行字节码修改和代码注入。听起来是不是一些很黑客，也很黑科技的事？是的，这个方式使用Java这门静态语言在运行时可以进行各种动态的代码修改，而且可以进行无侵入的编程。")]),e._v(" "),t("p",[e._v("比如， 我们不需要在代码中埋点做统计或监控，可以使用这种技术把我们的监控代码直接以字节码的方式注入到别人的代码中，从而实现对实际程序运行情况进行统计和监控。如果你看过我的《编程范式游记》，你就知道这种技术的威力了，其可以很魔法地把业务逻辑和代码控制分离开来。")]),e._v(" "),t("p",[e._v("要做到这个事，你还需要学习一个叫Java Agent的技术。Java Agent使用的是 “"),t("a",{attrs:{href:"https://stackoverflow.com/questions/11898566/tutorials-about-javaagents",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java Instrumentation API"),t("OutboundLink")],1),e._v("”，其主要方法是实现一个叫 "),t("code",[e._v("premain()")]),e._v(" 的方法（嗯，一个比 "),t("code",[e._v("main()")]),e._v(" 函数还要超前执行的 main 函数），然后把你的代码编译成一个jar文件。")]),e._v(" "),t("p",[e._v("在JVM启动时，使用这样的命令行来引入你的jar文件："),t("code",[e._v("java -javaagent:yourAwesomeAgent.jar -jar App.jar")]),e._v("。更为详细的文章你可以参看：“"),t("a",{attrs:{href:"https://www.javacodegeeks.com/2015/09/java-agents.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java Code Geeks: Java Agents"),t("OutboundLink")],1),e._v("”，你还可以看一下这个示例项目："),t("a",{attrs:{href:"https://github.com/toptal/jvm-monitoring-agent",target:"_blank",rel:"noopener noreferrer"}},[e._v("jvm-monitoring-agent"),t("OutboundLink")],1),e._v(" 或是 "),t("a",{attrs:{href:"https://gist.github.com/EntryPointKR/152f089f6f3884047abcd19d39297c9e",target:"_blank",rel:"noopener noreferrer"}},[e._v("EntryPointKR/Agent.java"),t("OutboundLink")],1),e._v("。如果想用ByteBuddy来玩，你可以看看这篇文章 “"),t("a",{attrs:{href:"http://www.infoq.com/cn/articles/Easily-Create-Java-Agents-with-ByteBuddy",target:"_blank",rel:"noopener noreferrer"}},[e._v("通过使用Byte Buddy，便捷地创建Java Agent"),t("OutboundLink")],1),e._v("”。如果你想学习如何用Java Agent做监控，你可以看一下这个项目 "),t("a",{attrs:{href:"http://www.stagemonitor.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stage Monitor"),t("OutboundLink")],1),e._v("。")]),e._v(" "),e._m(1),e._v(" "),t("p",[e._v("接下来讲讲Java底层知识中另一个非常重要的内容——JVM。")]),e._v(" "),t("p",[e._v("说起JVM，你有必要读一下JVM的规格说明书，我在这里放一个Java 8的， "),t("a",{attrs:{href:"https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Java Virtual Machine Specification Java SE 8 Edition"),t("OutboundLink")],1),e._v(" 。对于规格说明书的阅读，我认为是系统了解JVM规范的最佳文档，这个文档可以让你对于搞不清楚或是诡异的问题恍然大悟。关于中文翻译，有人在GitHub上开了个Repo - “"),t("a",{attrs:{href:"https://github.com/waylau/java-virtual-machine-specification",target:"_blank",rel:"noopener noreferrer"}},[e._v("java-virtual-machine-specification"),t("OutboundLink")],1),e._v("”。")]),e._v(" "),t("p",[e._v("另外，也推荐一下 "),t("a",{attrs:{href:"https://shipilev.net/jvm-anatomy-park/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JVM Anatomy Park"),t("OutboundLink")],1),e._v(" JVM解剖公园，这是一个系列的文章，每篇文章都不长，但是都很精彩，带你一点一点地把JVM中的一些技术解开。")]),e._v(" "),t("p",[e._v("学习Java底层原理还有Java的内存模型，官方文章是 "),t("a",{attrs:{href:"http://www.jcp.org/en/jsr/detail?id=133",target:"_blank",rel:"noopener noreferrer"}},[e._v("JSR 133"),t("OutboundLink")],1),e._v("。还有马里兰大学的威廉·皮尤（William Pugh）教授收集的和Java内存模型相关的文献 - "),t("a",{attrs:{href:"http://www.cs.umd.edu/~pugh/java/memoryModel/",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Java Memory Model"),t("OutboundLink")],1),e._v(" ，你可以前往浏览。")]),e._v(" "),t("p",[e._v("对于内存方面，道格·利（Doug Lea）有两篇文章也是很有价值的。")]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"http://gee.cs.oswego.edu/dl/jmm/cookbook.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("The JSR-133 Cookbook for Compiler Writers"),t("OutboundLink")],1),e._v("，解释了怎样实现Java内存模型，特别是在考虑到多处理器（或多核）系统的情况下，多线程和读写屏障的实现。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://gee.cs.oswego.edu/dl/html/j9mm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using JDK 9 Memory Order Modes"),t("OutboundLink")],1),e._v("，讲了怎样通过VarHandle来使用plain、opaque、release/acquire和volatile四种共享内存的访问模式，并剖析了底层的原理。")])])]),e._v(" "),t("p",[e._v("垃圾回收机制也是需要好好学习的，在这里推荐一本书 《"),t("a",{attrs:{href:"https://book.douban.com/subject/6809987/",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Garbage Collection Handbook"),t("OutboundLink")],1),e._v("》，在豆瓣上的得分居然是9.9（当然，评价人数不多）。这本书非常全面地介绍了垃圾收集的原理、设计和算法。但是这本书也是相当难啃的。中文翻译《"),t("a",{attrs:{href:"https://book.douban.com/subject/26740958/",target:"_blank",rel:"noopener noreferrer"}},[e._v("垃圾回收算法手册"),t("OutboundLink")],1),e._v("》翻译得很一般，有人说翻译得很烂。所以，如果可能，还是读英文版的。如果你对从事垃圾回收相关的工作有兴趣，那么你需要好好看一下这本书。")]),e._v(" "),t("p",[e._v("当然，更多的人可能只需要知道怎么调优垃圾回收， 那么推荐读读 "),t("a",{attrs:{href:"http://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Garbage Collection Tuning Guide"),t("OutboundLink")],1),e._v(" ，它是Hotspot Java虚拟机的垃圾回收调优指南，对你很有帮助。")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://gist.github.com/djspiewak/464c11307cabc80171c90397d4ec34ef",target:"_blank",rel:"noopener noreferrer"}},[e._v("Quick Tips for Fast Code on the JVM"),t("OutboundLink")],1),e._v(" 也是一篇很不错的文章，里面有写出更快的Java代码的几个小提示，值得一读。")]),e._v(" "),e._m(2),e._v(" "),t("p",[e._v("好了，总结一下今天学到的内容。Java最黑科技的玩法就是字节码编程，也就是动态修改或是动态生成Java字节码。Java的字节码相当于汇编，学习其中的细节很有意思，为此我精心挑选了3篇文章，供你学习。我们一般不使用JVMTI操作字节码，而是用一些更好用的库，如asmtools、Byte Buddy和BiteScript等。使用字节码编程可以玩出很多高级玩法，其中最高级的玩法是在Java程序运行时进行字节码修改和代码注入。同时，我介绍了Java Agent技术，帮助你更好地实现这种高级玩法。")]),e._v(" "),t("p",[e._v("JVM也是学习Java过程中非常重要的一部分内容。我推荐阅读一下JVM的规格说明书，我认为，它是系统了解JVM规范的最佳文档，可以让你对于搞不清楚或是诡异的问题恍然大悟。同时推荐了 "),t("a",{attrs:{href:"https://shipilev.net/jvm-anatomy-park/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JVM Anatomy Park"),t("OutboundLink")],1),e._v(" 系列文章，也非常值得一读。")]),e._v(" "),t("p",[e._v("随后介绍的是Java的内存模型和垃圾回收机制，尤其给出了如何调优垃圾回收方面的资料。这些内容都很底层，但也都很重要。对于想成为高手的你来说，还是有必要花时间来啃一啃的。")]),e._v(" "),t("p",[e._v("下篇文章是数据库方面的内容，我们将探讨各种类型的数据库，非常有意思。敬请期待。")]),e._v(" "),t("p",[e._v("下面是《程序员练级攻略（2018）》系列文章的目录。")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/8136",target:"_blank",rel:"noopener noreferrer"}},[e._v("开篇词"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("入门篇\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/8216",target:"_blank",rel:"noopener noreferrer"}},[e._v("零基础启蒙"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/8217",target:"_blank",rel:"noopener noreferrer"}},[e._v("正式入门"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("修养篇\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/8700",target:"_blank",rel:"noopener noreferrer"}},[e._v("程序员修养"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("专业基础篇\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/8701",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程语言"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/8887",target:"_blank",rel:"noopener noreferrer"}},[e._v("理论学科"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/8888",target:"_blank",rel:"noopener noreferrer"}},[e._v("系统知识"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("软件设计篇\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/9369",target:"_blank",rel:"noopener noreferrer"}},[e._v("软件设计"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("高手成长篇\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/9759",target:"_blank",rel:"noopener noreferrer"}},[e._v("Linux系统、内存和网络（系统底层知识）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/9851",target:"_blank",rel:"noopener noreferrer"}},[e._v("异步I/O模型和Lock-Free编程（系统底层知识）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/10216",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java底层知识"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/10301",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据库"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/10603",target:"_blank",rel:"noopener noreferrer"}},[e._v("分布式架构入门（分布式架构）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/10604",target:"_blank",rel:"noopener noreferrer"}},[e._v("分布式架构经典图书和论文（分布式架构）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/11232",target:"_blank",rel:"noopener noreferrer"}},[e._v("分布式架构工程设计(分布式架构)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/11116",target:"_blank",rel:"noopener noreferrer"}},[e._v("微服务"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/11665",target:"_blank",rel:"noopener noreferrer"}},[e._v("容器化和自动化运维"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/11669",target:"_blank",rel:"noopener noreferrer"}},[e._v("机器学习和人工智能"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/12271",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端基础和底层原理（前端方向）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/12389",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端性能优化和框架（前端方向）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/12486",target:"_blank",rel:"noopener noreferrer"}},[e._v("UI/UX设计（前端方向）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/12561",target:"_blank",rel:"noopener noreferrer"}},[e._v("技术资源集散地"),t("OutboundLink")],1)])])])]),e._v(" "),e._m(3)])},[function(){var e=this.$createElement,r=this._self._c||e;return r("h1",{attrs:{id:"java-字节码相关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java-字节码相关","aria-hidden":"true"}},[this._v("#")]),this._v(" Java 字节码相关")])},function(){var e=this.$createElement,r=this._self._c||e;return r("h1",{attrs:{id:"jvm-相关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jvm-相关","aria-hidden":"true"}},[this._v("#")]),this._v(" JVM 相关")])},function(){var e=this.$createElement,r=this._self._c||e;return r("h1",{attrs:{id:"小结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小结","aria-hidden":"true"}},[this._v("#")]),this._v(" 小结")])},function(){var e=this.$createElement,r=this._self._c||e;return r("p",[r("img",{attrs:{src:"https://static001.geekbang.org/resource/image/fc/e9/fcc761001867c60f526665e237f831e9.jpg",alt:""}})])}],!1,null,null,null);r.default=n.exports}}]);