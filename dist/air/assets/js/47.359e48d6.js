(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{270:function(e,r,t){"use strict";t.r(r);var o=t(0),n=Object(o.a)({},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("p",[e._v("这篇文章重点介绍Prolog语言。Prolog（Programming in Logic的缩写）是一种逻辑编程语言。它创建在逻辑学的理论基础之上，最初被运用于自然语言等研究领域。现在它已被广泛地应用在人工智能的研究中，可以用来建造专家系统、自然语言理解、智能知识库等。")]),e._v(" "),t("p",[e._v("Prolog语言最早由艾克斯马赛大学（Aix-Marseille University）的Alain Colmerauer与Philippe Roussel等人于20年代60年代末研究开发的。1972年被公认为是Prolog语言正式诞生的年份，自1972年以后，分支出多种Prolog的方言。")]),e._v(" "),t("p",[e._v("最主要的两种方言为Edinburgh和Aix-Marseille。最早的Prolog解释器由Roussel建造，而第一个Prolog编译器则是David Warren编写的。")]),e._v(" "),t("p",[e._v("Prolog一直在北美和欧洲被广泛使用。日本政府曾经为了建造智能计算机而用Prolog来开发ICOT第五代计算机系统。在早期的机器智能研究领域，Prolog曾经是主要的开发工具。")]),e._v(" "),t("p",[e._v("20世纪80年代Borland开发的Turbo Prolog，进一步普及了Prolog的使用。1995年确定了ISO Prolog标准。")]),e._v(" "),t("p",[e._v("有别于一般的函数式语言，Prolog的程序是基于谓词逻辑的理论。最基本的写法是定立对象与对象之间的关系，之后可以用询问目标的方式来查询各种对象之间的关系。系统会自动进行匹配及回溯，找出所询问的答案。")]),e._v(" "),t("p",[e._v("Prolog代码中以大写字母开头的元素是变量，字符串、数字或以小写字母开头的元素是常量，下划线（_）被称为匿名变量。")]),e._v(" "),e._m(0),e._v(" "),t("p",[e._v("逻辑编程是靠推理，比如下面的示例：")]),e._v(" "),e._m(1),e._v(" "),t("p",[e._v("我们可以看到下面的几个步骤。")]),e._v(" "),e._m(2),e._v(" "),t("p",[e._v("下面是逻辑编程范式的几个特征。")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),t("p",[e._v("我们再来看一个经典的四色地图问题。任何一个地图，相邻区域不能用相同颜色，只要用四种不同的颜色就够了。")]),e._v(" "),e._m(5),e._v(" "),t("p",[e._v("首先，定义四种颜色。")]),e._v(" "),e._m(6),e._v(" "),t("p",[e._v("然后，定义一个规则：相邻的两个地区不能用相同的颜色。")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),t("p",[e._v("接下来的事就比较简单了。我们描述事实就好了，描述哪些区域是相邻的事实。")]),e._v(" "),t("p",[e._v("比如，下面描述了 BW 和 BY 是相邻的。")]),e._v(" "),e._m(9),e._v(" "),t("p",[e._v("下面则描述多个区 BW、 BY、 SL、 RP、 和 ND 的相邻关系：")]),e._v(" "),e._m(10),e._v(" "),t("p",[e._v("于是，我们就可以描述整个德国地图的相邻关系了。")]),e._v(" "),e._m(11),e._v(" "),t("p",[e._v("最后，我们使用如下语句，就可以让Prolog推导到各个地区的颜色。")]),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),t("p",[e._v("Prolog这种逻辑编程，把业务逻辑或是说算法抽象成只关心规则、事实和问题的推导这样的标准方式，不需要关心程序控制，也不需要关心具体的实现算法。只需要给出可以用于推导的规则和相关的事实，问题就可以被通过逻辑推导来解决掉。是不是很有意思，也很好玩？")]),e._v(" "),t("p",[e._v("如果有兴趣，你可以学习一下，这里推荐两个学习资源：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.doc.gold.ac.uk/~mas02gw/prolog_tutorial/prologpages/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Prolog Tutorial"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.learnprolognow.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("Learn Prolog Now!"),t("OutboundLink")],1)])]),e._v(" "),e._m(14),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/301",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（1）- 起源"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/303",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（2）- 泛型编程"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/2017",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（3）- 类型系统和泛型的本质"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/2711",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（4）- 函数式编程"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/2723",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（5）- 修饰器模式"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/2729",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（6）- 面向对象编程"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/2741",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（7）- 基于原型的编程范式"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/2748",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（8）- Go 语言的委托模式"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/2751",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（9）- 编程的本质"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/2752",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（10）- 逻辑编程范式"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/2754",target:"_blank",rel:"noopener noreferrer"}},[e._v("编程范式游记（11）- 程序世界里的编程范式"),t("OutboundLink")],1)])]),e._v(" "),e._m(15)])},[function(){var e=this.$createElement,r=this._self._c||e;return r("h1",{attrs:{id:"prolog的语言特征"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prolog的语言特征","aria-hidden":"true"}},[this._v("#")]),this._v(" Prolog的语言特征")])},function(){var e=this.$createElement,r=this._self._c||e;return r("pre",[r("code",[this._v("program mortal(X) :- philosopher(X).\n\nphilosopher(Socrates).\nphilosopher(Plato).\nphilosopher(Aristotle).\n\nmortal_report:-\nwrite('Known mortals are:'), nl, mortal(X),\nwrite(X),nl,\nfail.\n")])])},function(){var e=this.$createElement,r=this._self._c||e;return r("ol",[r("li",[this._v("先定义一个规则：哲学家是人类。")]),this._v(" "),r("li",[this._v("然后陈述事实：苏格拉底、亚里士多德、柏拉图都是哲学家。")]),this._v(" "),r("li",[this._v("然后，我们问，谁是人类？于是就会输出苏格拉底、亚里士多德、柏拉图。")])])},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ul",[t("li",[e._v("逻辑编程的要点是将正规的逻辑风格带入计算机程序设计之中。")]),e._v(" "),t("li",[e._v("逻辑编程建立了描述一个问题里的世界的逻辑模型。")]),e._v(" "),t("li",[e._v("逻辑编程的目标是对它的模型建立新的陈述。")]),e._v(" "),t("li",[e._v("通过陈述事实——因果关系。")]),e._v(" "),t("li",[e._v("程序自动推导出相关的逻辑。")])])},function(){var e=this.$createElement,r=this._self._c||e;return r("h1",{attrs:{id:"经典问题：地图着色问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#经典问题：地图着色问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 经典问题：地图着色问题")])},function(){var e=this.$createElement,r=this._self._c||e;return r("p",[r("img",{attrs:{src:"https://static001.geekbang.org/resource/image/db/cb/db670cfbe7497d71eba70d60d8aa0fcb.png",alt:""}})])},function(){var e=this.$createElement,r=this._self._c||e;return r("pre",[r("code",[this._v("color(red).\ncolor(green).\ncolor(blue).\ncolor(yellow).\n")])])},function(){var e=this.$createElement,r=this._self._c||e;return r("pre",[r("code",[this._v("neighbor(StateAColor, StateBColor) :- color(StateAColor), color(StateBColor), \n    StateAColor \\= StateBColor. /* \\= is the not equal operator */\n")])])},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("p",[e._v("最前面的两个条件："),t("code",[e._v("color(StateAColor)")]),e._v(" 和 "),t("code",[e._v("color(StateBColor)")]),e._v(" 表明了两个变量 "),t("code",[e._v("StateAColor")]),e._v(" 和 "),t("code",[e._v("StateBColor")]),e._v("。然后，第三个条件： "),t("code",[e._v("StateAColor \\= StateBColor")]),e._v(" 表示颜色不能相同。")])},function(){var e=this.$createElement,r=this._self._c||e;return r("p",[r("code",[this._v("germany(BW, BY) :- neighbor(BW, BY).")])])},function(){var e=this.$createElement,r=this._self._c||e;return r("p",[r("code",[this._v("germany(BW, BY, SL, RP, HE) :- neighbor(BW, BY), neighbor(BW, RP), neighbor(BW, HE).")])])},function(){var e=this.$createElement,r=this._self._c||e;return r("pre",[r("code",[this._v("germany(SH, MV, HH, HB, NI, ST, BE, BB, SN, NW, HE, TH, RP, SL, BW, BY) :- \nneighbor(SH, NI), neighbor(SH, HH), neighbor(SH, MV),\nneighbor(HH, NI),\nneighbor(MV, NI), neighbor(MV, BB),\nneighbor(NI, HB), neighbor(NI, BB), neighbor(NI, ST), neighbor(NI, TH),\nneighbor(NI, HE), neighbor(NI, NW),\nneighbor(ST, BB), neighbor(ST, SN), neighbor(ST, TH),\nneighbor(BB, BE), neighbor(BB, SN),\nneighbor(NW, HE), neighbor(NW, RP),\nneighbor(SN, TH), neighbor(SN, BY),\nneighbor(RP, SL), neighbor(RP, HE), neighbor(RP, BW),\nneighbor(HE, BW), neighbor(HE, TH), neighbor(HE, BY),\nneighbor(TH, BY),\nneighbor(BW, BY).\n")])])},function(){var e=this.$createElement,r=this._self._c||e;return r("pre",[r("code",[this._v("?- germany(SH, MV, HH, HB, NI, ST, BE, BB, SN, NW, HE, TH, RP, SL, BW, BY).\n")])])},function(){var e=this.$createElement,r=this._self._c||e;return r("h1",{attrs:{id:"小结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小结","aria-hidden":"true"}},[this._v("#")]),this._v(" 小结")])},function(){var e=this.$createElement,r=this._self._c||e;return r("p",[this._v("以下是《编程范式游记》系列文章的目录，方便你了解这一系列内容的全貌。"),r("strong",[this._v("这一系列文章中代码量很大，很难用音频体现出来，所以没有录制音频，还望谅解。")])])},function(){var e=this.$createElement,r=this._self._c||e;return r("p",[r("img",{attrs:{src:"https://static001.geekbang.org/resource/image/fc/e9/fcc761001867c60f526665e237f831e9.jpg",alt:""}})])}],!1,null,null,null);r.default=n.exports}}]);