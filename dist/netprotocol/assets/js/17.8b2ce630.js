(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{196:function(e,t,s){"use strict";s.r(t);var n=s(0),r=Object(n.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[s("p",[e._v("上一节我们讲了RPC的经典模型和设计要点，并用最早期的ONC RPC为例子，详述了具体的实现。")]),e._v(" "),e._m(0),e._v(" "),s("p",[e._v("ONC RPC将客户端要发送的参数，以及服务端要发送的回复，都压缩为一个二进制串，这样固然能够解决双方的协议约定问题，但是存在一定的不方便。")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),s("p",[e._v("因而，当业务发生改变，需要多传输一些参数或者少传输一些参数的时候，都需要及时通知对方，并且根据约定好的协议文件重新生成双方的Stub程序。自然，这样灵活性比较差。")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),s("p",[e._v("这一切的根源就在于压缩。这就像平时我们爱用缩略语。如果是篮球爱好者，你直接说NBA，他马上就知道什么意思，但是如果你给一个大妈说NBA，她可能就不知所云。")]),e._v(" "),s("p",[e._v("所以，这种RPC框架只能用于客户端和服务端全由一拨人开发的场景，或者至少客户端和服务端的开发人员要密切沟通，相互合作，有大量的共同语言，才能按照既定的协议顺畅地进行工作。")]),e._v(" "),e._m(5),e._v(" "),s("p",[e._v("但是，一般情况下，我们做一个服务，都是要提供给陌生人用的，你和客户不会经常沟通，也没有什么共同语言。就像你给别人介绍NBA，你要说美国职业篮球赛，这样不管他是干啥的，都能听得懂。")]),e._v(" "),e._m(6),e._v(" "),s("p",[e._v("一种常见的文本类格式是XML。我们这里举个例子来看。")]),e._v(" "),e._m(7),e._v(" "),s("p",[e._v("我这里不准备详细讲述XML的语法规则，但是你相信我，看完下面的内容，即便你没有学过XML，也能一看就懂，这段XML描述的是什么，不像全面的二进制，你看到的都是010101，不知所云。")]),e._v(" "),s("p",[e._v("有了这个，刚才我们说的那几个问题就都不是问题了。")]),e._v(" "),e._m(8),e._v(" "),s("p",[e._v("如果有的客户端想增加一个字段，例如添加一个推荐人字段，只需要在上面的文件中加一行：")]),e._v(" "),e._m(9),e._v(" "),s("p",[e._v("对于不需要这个字段的客户端，只要不解析这一行就是了。只要用简单的处理，就不会出现错误。")]),e._v(" "),s("p",[e._v("另外，这种表述方式显然是描述一个订单对象的，是一种面向对象的、更加接近用户场景的表示方式。")]),e._v(" "),s("p",[e._v("既然XML这么好，接下来我们来看看怎么把它用在RPC中。")]),e._v(" "),e._m(10),e._v(" "),s("p",[e._v("我们先解决第一个，传输协议的问题。")]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),s("p",[e._v("HTTP协议我们学过，这个请求使用POST方法，发送一个格式为 application/soap + xml 的XML正文给 "),s("a",{attrs:{href:"http://www.geektime.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("www.geektime.com"),s("OutboundLink")],1),e._v("，从而下一个单，这个订单封装在SOAP的信封里面，并且表明这是一笔交易（transaction），而且订单的详情都已经写明了。")]),e._v(" "),e._m(14),e._v(" "),s("p",[e._v("接下来我们解决第二个问题，就是双方的协议约定是什么样的？")]),e._v(" "),s("p",[e._v("因为服务开发出来是给陌生人用的，就像上面下单的那个XML文件，对于客户端来说，它如何知道应该拼装成上面的格式呢？这就需要对于服务进行描述，因为调用的人不认识你，所以没办法找到你，问你的服务应该如何调用。")]),e._v(" "),e._m(15),e._v(" "),s("p",[e._v("在这个文件中，要定义一个类型order，与上面的XML对应起来。")]),e._v(" "),e._m(16),e._v(" "),s("p",[e._v("接下来，需要定义一个message的结构。")]),e._v(" "),e._m(17),e._v(" "),s("p",[e._v("接下来，应该暴露一个端口。")]),e._v(" "),e._m(18),e._v(" "),s("p",[e._v("然后，我们来编写一个binding，将上面定义的信息绑定到SOAP请求的body里面。")]),e._v(" "),e._m(19),e._v(" "),s("p",[e._v("最后，我们需要编写service。")]),e._v(" "),e._m(20),e._v(" "),s("p",[e._v("WSDL还是有些复杂的，不过好在有工具可以生成。")]),e._v(" "),s("p",[e._v("对于某个服务，哪怕是一个陌生人，都可以通过在服务地址后面加上“?wsdl”来获取到这个文件，但是这个文件还是比较复杂，比较难以看懂。不过好在也有工具可以根据WSDL生成客户端Stub，让客户端通过Stub进行远程调用，就跟调用本地的方法一样。")]),e._v(" "),e._m(21),e._v(" "),s("p",[e._v("最后解决第三个问题，服务发现问题。")]),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),s("p",[e._v("好了，这一节就到这里了，我们来总结一下。")]),e._v(" "),e._m(24),e._v(" "),s("p",[e._v("最后，给你留两个思考题：")]),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),s("p",[e._v("欢迎你留言和我讨论。趣谈网络协议，我们下期见！")]),e._v(" "),e._m(27)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"onc-rpc存在哪些问题？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#onc-rpc存在哪些问题？","aria-hidden":"true"}},[this._v("#")]),this._v(" ONC RPC存在哪些问题？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("首先，"),t("strong",[this._v("需要双方的压缩格式完全一致")]),this._v("，一点都不能差。一旦有少许的差错，多一位，少一位或者错一位，都可能造成无法解压缩。当然，我们可以用传输层的可靠性以及加入校验值等方式，来减少传输过程中的差错。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("其次，"),t("strong",[this._v("协议修改不灵活")]),this._v("。如果不是传输过程中造成的差错，而是客户端因为业务逻辑的改变，添加或者删除了字段，或者服务端添加或者删除了字段，而双方没有及时通知，或者线上系统没有及时升级，就会造成解压缩不成功。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("如果仅仅是沟通的问题也还好解决，其实更难弄的还有"),t("strong",[this._v("版本的问题")]),this._v("。比如在服务端提供一个服务，参数的格式是版本一的，已经有50个客户端在线上调用了。现在有一个客户端有个需求，要加一个字段，怎么办呢？这可是一个大工程，所有的客户端都要适配这个，需要重新写程序，加上这个字段，但是传输值是0，不需要这个字段的客户端很“冤”，本来没我啥事儿，为啥让我也忙活？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("最后，"),t("strong",[this._v("ONC RPC的设计明显是面向函数的，而非面向对象")]),this._v("。而当前面向对象的业务逻辑设计与实现方式已经成为主流。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"xml与soap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xml与soap","aria-hidden":"true"}},[this._v("#")]),this._v(" XML与SOAP")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("放到我们的场景中，对应的就是用"),t("strong",[this._v("文本类")]),this._v("的方式进行传输。无论哪个客户端获得这个文本，都能够知道它的意义。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('<?xml version="1.0" encoding="UTF-8"?>\n<geek:purchaseOrder xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:geek="http://www.example.com/geek">\n    <order>\n        <date>2018-07-01</date>\n        <className>趣谈网络协议</className>\n        <Author>刘超</Author>\n        <price>68</price>\n    </order>\n</geek:purchaseOrder>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("首先，"),t("strong",[this._v("格式没必要完全一致")]),this._v("。比如如果我们把price和author换个位置，并不影响客户端和服务端解析这个文本，也根本不会误会，说这个作者的名字叫68。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("<recommended> Gary </recommended> \n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"传输协议问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传输协议问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 传输协议问题")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("基于XML的最著名的通信协议就是"),t("strong",[this._v("SOAP")]),this._v("了，全称"),t("strong",[this._v("简单对象访问协议")]),this._v("（Simple Object Access Protocol）。它使用XML编写简单的请求和回复消息，并用HTTP协议进行传输。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("SOAP将请求和回复放在一个信封里面，就像传递一个邮件一样。信封里面的信分"),t("strong",[this._v("抬头")]),this._v("和"),t("strong",[this._v("正文")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('POST /purchaseOrder HTTP/1.1\nHost: www.geektime.com\nContent-Type: application/soap+xml; charset=utf-8\nContent-Length: nnn\n\n\n<?xml version="1.0"?>\n<soap:Envelope xmlns:soap="http://www.w3.org/2001/12/soap-envelope"\nsoap:encodingStyle="http://www.w3.org/2001/12/soap-encoding">\n    <soap:Header>\n        <m:Trans xmlns:m="http://www.w3schools.com/transaction/"\n          soap:mustUnderstand="1">1234\n        </m:Trans>\n    </soap:Header>\n    <soap:Body xmlns:m="http://www.geektime.com/perchaseOrder">\n        <m:purchaseOrder">\n            <order>\n                <date>2018-07-01</date>\n                <className>趣谈网络协议</className>\n                <Author>刘超</Author>\n                <price>68</price>\n            </order>\n        </m:purchaseOrder>\n    </soap:Body>\n</soap:Envelope>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"协议约定问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协议约定问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 协议约定问题")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("当然你可以写文档，然后放在官方网站上，但是你的文档不一定更新得那么及时，而且你也写的文档也不一定那么严谨，所以常常会有调试不成功的情况。因而，我们需要一种相对比较严谨的"),t("strong",[this._v("Web服务描述语言")]),this._v("，"),t("strong",[this._v("WSDL")]),this._v("（Web Service Description Languages）。它也是一个XML文件。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v(' <wsdl:types>\n  <xsd:schema targetNamespace="http://www.example.org/geektime">\n   <xsd:complexType name="order">\n    <xsd:element name="date" type="xsd:string"></xsd:element>\n<xsd:element name="className" type="xsd:string"></xsd:element>\n<xsd:element name="Author" type="xsd:string"></xsd:element>\n    <xsd:element name="price" type="xsd:int"></xsd:element>\n   </xsd:complexType>\n  </xsd:schema>\n </wsdl:types>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v(' <wsdl:message name="purchase">\n  <wsdl:part name="purchaseOrder" element="tns:order"></wsdl:part>\n </wsdl:message>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v(' <wsdl:portType name="PurchaseOrderService">\n  <wsdl:operation name="purchase">\n   <wsdl:input message="tns:purchase"></wsdl:input>\n   <wsdl:output message="......"></wsdl:output>\n  </wsdl:operation>\n </wsdl:portType>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v(' <wsdl:binding name="purchaseOrderServiceSOAP" type="tns:PurchaseOrderService">\n  <soap:binding style="rpc"\n   transport="http://schemas.xmlsoap.org/soap/http" />\n  <wsdl:operation name="purchase">\n   <wsdl:input>\n    <soap:body use="literal" />\n   </wsdl:input>\n   <wsdl:output>\n    <soap:body use="literal" />\n   </wsdl:output>\n  </wsdl:operation>\n </wsdl:binding>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v(' <wsdl:service name="PurchaseOrderServiceImplService">\n  <wsdl:port binding="tns:purchaseOrderServiceSOAP" name="PurchaseOrderServiceImplPort">\n   <soap:address location="http://www.geektime.com:8080/purchaseOrder" />\n  </wsdl:port>\n </wsdl:service>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"服务发现问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务发现问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 服务发现问题")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这里有一个"),t("strong",[this._v("UDDI")]),this._v("（Universal Description, Discovery, and Integration），也即"),t("strong",[this._v("统一描述、发现和集成协议")]),this._v("。它其实是一个注册中心，服务提供方可以将上面的WSDL描述文件，发布到这个注册中心，注册完毕后，服务使用方可以查找到服务的描述，封装为本地的客户端进行调用。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结","aria-hidden":"true"}},[this._v("#")]),this._v(" 小结")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("p",[this._v("原来的二进制RPC有很多缺点，格式要求严格，修改过于复杂，不面向对象，于是产生了基于文本的调用方式——基于XML的SOAP。")])]),this._v(" "),t("li",[t("p",[this._v("SOAP有三大要素：协议约定用WSDL、传输协议用HTTP、服务发现用UDDL。")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("p",[this._v("对于HTTP协议来讲，有多种方法，但是SOAP只用了POST，这样会有什么问题吗？")])]),this._v(" "),t("li",[t("p",[this._v("基于文本的RPC虽然解决了二进制的问题，但是SOAP还是有点复杂，还有一种更便捷的接口规则，你知道是什么吗？")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("我们的专栏更新到第33讲，不知你掌握得如何？每节课后我留的思考题，你都有没有认真思考，并在留言区写下答案呢？我会从"),t("strong",[this._v("已发布的文章中选出一批认真留言的同学")]),this._v("，赠送学习奖励礼券和我整理的独家网络协议知识图谱。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://static001.geekbang.org/resource/image/b5/fb/b5bc14cb81d3630919fee94a512cc3fb.jpg",alt:""}})])}],!1,null,null,null);t.default=r.exports}}]);